# Generated by Django 5.2 on 2025-04-07 22:28

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Adresse email')),
                ('nom_complet', models.CharField(max_length=100, verbose_name='Nom complet')),
                ('numero_telephone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Format accepté: 44076356, +22244076356 ou (+222)44076356', regex='^(\\+?\\d{1,3}[-\\s]?)?(\\(\\d{1,3}\\))?\\d{8,15}$')], verbose_name='Numéro de téléphone')),
                ('photo_profil', models.ImageField(blank=True, null=True, upload_to='photos_profil/', verbose_name='Photo de profil')),
                ('est_verifie', models.BooleanField(default=False, verbose_name='Email vérifié')),
                ('jeton_verification', models.CharField(blank=True, max_length=64, null=True, verbose_name='Jeton de vérification')),
                ('expiration_jeton_verification', models.DateTimeField(blank=True, null=True, verbose_name='Expiration du jeton')),
                ('type_utilisateur', models.CharField(choices=[('client', 'Client'), ('freelancer', 'Freelancer'), ('administrateur', 'Administrateur')], default='client', max_length=20, verbose_name="Type d'utilisateur")),
                ('est_actif', models.BooleanField(default=True, verbose_name='Compte actif')),
                ('est_staff', models.BooleanField(default=False, verbose_name='Équipe admin')),
                ('est_superutilisateur', models.BooleanField(default=False, verbose_name='Superutilisateur')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('groups', models.ManyToManyField(blank=True, help_text='Les groupes auxquels appartient cet utilisateur.', related_name='utilisateurs_custom', related_query_name='utilisateur', to='auth.group', verbose_name='groupes')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permissions spécifiques à cet utilisateur.', related_name='utilisateurs_custom', related_query_name='utilisateur', to='auth.permission', verbose_name='permissions utilisateur')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
            },
        ),
        migrations.CreateModel(
            name='Freelancer',
            fields=[
                ('utilisateur_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.utilisateur')),
                ('cv', models.FileField(blank=True, null=True, upload_to='cvs_freelancers/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'doc', 'docx'])], verbose_name='Curriculum Vitae')),
                ('specialisation', models.CharField(max_length=100, verbose_name='Spécialisation principale')),
                ('intitule_poste', models.CharField(max_length=100, verbose_name='Intitulé de poste')),
                ('competences', models.JSONField(blank=True, default=list, verbose_name='Liste des compétences')),
            ],
            options={
                'verbose_name': 'Freelancer',
                'verbose_name_plural': 'Freelancers',
            },
            bases=('users.utilisateur',),
        ),
        migrations.CreateModel(
            name='Administrateur',
            fields=[
            ],
            options={
                'verbose_name': 'Administrateur',
                'verbose_name_plural': 'Administrateurs',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.utilisateur',),
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.utilisateur',),
        ),
    ]
