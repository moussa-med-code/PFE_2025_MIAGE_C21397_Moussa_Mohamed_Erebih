# Generated by Django 5.2 on 2025-05-07 01:34

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('users', '0008_alter_freelancer_intitule_poste_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_mise_a_jour', models.DateTimeField(auto_now=True)),
                ('freelancer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='users.freelancer')),
            ],
            options={
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_notification', models.CharField(choices=[('projet_publie', 'Projet publié'), ('nouvelle_candidature', 'Nouvelle candidature'), ('freelancer_selectionne', 'Freelancer sélectionné'), ('postulation_acceptee', 'Postulation acceptée'), ('postulation_refusee', 'Postulation refusée'), ('evaluation_recue', 'Évaluation reçue')], max_length=30)),
                ('est_vue', models.BooleanField(default=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Projet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('budget_min', models.DecimalField(decimal_places=2, max_digits=10)),
                ('budget_max', models.DecimalField(decimal_places=2, max_digits=10)),
                ('deadline', models.DateField()),
                ('competences_requises', models.JSONField(default=list)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projets', to='users.client')),
            ],
            options={
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Postulation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('date_postulation', models.DateTimeField(auto_now_add=True)),
                ('statut', models.CharField(choices=[('en_attente', 'En attente'), ('accepte', 'Accepté'), ('refuse', 'Refusé')], default='en_attente', max_length=20)),
                ('freelancer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postulations', to='users.freelancer')),
                ('projet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postulations', to='users.projet')),
            ],
            options={
                'ordering': ['-date_postulation'],
                'unique_together': {('projet', 'freelancer')},
            },
        ),
    ]
